Description: Helm Chart Stack
Parameters:
  ResourceNamePrefix:
    Type: String
    Default: sagemaker-hyperpod-eks
    Description: Prefix to be used for all resources created by this template.
  EKSClusterName:
    Type: String
    Default: hyperpod-eks-cluster
    Description: The name of the EKS cluster you wish to use.
  HelmRepoUrl:
    Type: String
    Default: https://github.com/aws/sagemaker-hyperpod-cli.git
    Description: The URL of the Helm repo containing the HyperPod Helm chart.
  HelmRepoPath:
    Type: String
    Default: helm_chart/HyperPodHelmChart
    Description: The path to the HyperPod Helm chart in the Helm repo.
  RigHelmScriptPath:
    Type: String
    Default: helm_chart/install_rig_dependencies.sh
    Description: The path to the HyperPod RIG Helm dependency script in the Helm repo.
  HelmOperators:
    Type: String
    Default: ''
    Description: The configuration of HyperPod Helm chart
  CreateRIG:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: Specify whether to install RIG dependencies. Set to "true" to enable RIG installation.
  Namespace:
    Type: String
    Default: kube-system
    Description: The namespace to deploy the HyperPod Helm chart into.
  HelmRelease:
    Type: String
    Default: dependencies
    Description: The name of the Helm release.
  CustomResourceS3Bucket:
    Type: String
    Default: aws-sagemaker-hyperpod-cluster-setup-us-east-2-prod
    Description: The name of the S3 bucket containing the custom resource.
  LayerS3Key:
    Type: String
    Default: resources/artifacts/helm-lambda-layer.zip
    Description: The S3 key for the lambda layer zip file.
  FunctionS3Key:
    Type: String
    Default: resources/artifacts/helm-lambda-function.zip
    Description: The S3 key for the lambda function zip file.
Conditions:
  CreateRIGCondition:
    Fn::Equals:
      - Ref: CreateRIG
      - 'true'
Resources:
  HelmCustomResourceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - eks:DescribeCluster
                Resource:
                  Fn::Sub: arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/${EKSClusterName}
          PolicyName:
            Fn::Sub: ${ResourceNamePrefix}-EKSAccess
    Metadata:
      aws:cdk:path: HelmChartCfnTemplate/HelmCustomResourceRole
  HelmCustomResourceAccessEntry:
    Type: AWS::EKS::AccessEntry
    Properties:
      AccessPolicies:
        - AccessScope:
            Type: cluster
          PolicyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy
      ClusterName:
        Ref: EKSClusterName
      PrincipalArn:
        Fn::GetAtt:
          - HelmCustomResourceRole
          - Arn
    Metadata:
      aws:cdk:path: HelmChartCfnTemplate/HelmCustomResourceAccessEntry
  HelmCustomResourceLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleArchitectures:
        - x86_64
      CompatibleRuntimes:
        - python3.9
        - python3.10
        - python3.11
        - python3.12
      Content:
        S3Bucket:
          Ref: CustomResourceS3Bucket
        S3Key:
          Ref: LayerS3Key
      Description: Lambda Layer for kubectl, helm, and git tools
      LayerName:
        Fn::Sub: ${ResourceNamePrefix}-helm-layer
    Metadata:
      aws:cdk:path: HelmChartCfnTemplate/HelmCustomResourceLayer
  HelmCustomResourceFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: CustomResourceS3Bucket
        S3Key:
          Ref: FunctionS3Key
      Environment:
        Variables:
          CLUSTER_NAME:
            Ref: EKSClusterName
          PATH: /opt/python/bin:/var/lang/bin:/usr/local/bin:/usr/bin/:/bin
          GIT_EXEC_PATH: /opt/python/libexec/git-core
          KUBECONFIG: /tmp/.kube/config
          GITHUB_REPO_URL:
            Ref: HelmRepoUrl
          GITHUB_REPO_BRANCH:
            Fn::If:
              - CreateRIGCondition
              - release_v2
              - main
          CHART_PATH:
            Ref: HelmRepoPath
          OPERATORS:
            Ref: HelmOperators
          NAMESPACE:
            Ref: Namespace
          RELEASE_NAME:
            Ref: HelmRelease
          CREATE_RIG:
            Ref: CreateRIG
          RIG_SCRIPT_PATH:
            Ref: RigHelmScriptPath
          LD_LIBRARY_PATH: /opt/python/lib
      FunctionName:
        Fn::Sub: ${ResourceNamePrefix}-helm-func
      Handler: lambda_function.lambda_handler
      Layers:
        - Ref: HelmCustomResourceLayer
      Role:
        Fn::GetAtt:
          - HelmCustomResourceRole
          - Arn
      Runtime: python3.12
      Timeout: 600
    DependsOn:
      - HelmCustomResourceAccessEntry
    Metadata:
      aws:cdk:path: HelmChartCfnTemplate/HelmCustomResourceFunction
  HelmCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - HelmCustomResourceFunction
          - Arn
    Metadata:
      aws:cdk:path: HelmChartCfnTemplate/HelmCustomResource
Outputs:
  HelmChartDeploymentComplete:
    Description: Indicates Helm chart deployment is complete
    Value: HelmChartDeploymentComplete
