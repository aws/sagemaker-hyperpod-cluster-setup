Description: Inference Operator IAM Role Stack
Parameters:
  ResourceNamePrefix:
    Type: String
    Default: sagemaker-hyperpod-eks
    Description: Prefix to be used for all resources created by this template.
  EKSClusterName:
    Type: String
    Default: eks
    Description: The name of the EKS cluster.
  OIDCProviderURL:
    Type: String
    Description: The URL of the OIDC Provider for the EKS Cluster.
  OIDCProviderURLWithoutProtocol:
    Type: String
    Description: The URL of the OIDC Provider without https:// prefix.
  TLSCertificatesBucketName:
    Type: String
    Description: The name of the TLS certificates S3 bucket.
  VpcId:
    Type: String
    Description: The VPC ID from the dependency stack.
Resources:
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Fn::Sub: >-
          {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":["sagemaker.amazonaws.com"]},"Action":["sts:AssumeRole"]},{"Effect":"Allow","Principal":{"Federated":"arn:aws:iam::${AWS::AccountId}:oidc-provider/${OIDCProviderURLWithoutProtocol}"},"Action":["sts:AssumeRoleWithWebIdentity"],"Condition":{"StringLike":{"${OIDCProviderURLWithoutProtocol}:aud":"sts.amazonaws.com","${OIDCProviderURLWithoutProtocol}:sub":"system:serviceaccount:*:*"}}}]}
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: S3BucketAccess
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                  - s3:GetObject
                Resource:
                  - Fn::Sub: arn:aws:s3:::${TLSCertificatesBucketName}
                  - Fn::Sub: arn:aws:s3:::${TLSCertificatesBucketName}/*
                Condition:
                  StringEquals:
                    aws:PrincipalAccount:
                      Fn::Sub: ${AWS::AccountId}
              - Sid: ECRAuthorization
                Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: '*'
              - Sid: ECRRepositoryAccess
                Effect: Allow
                Action:
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:DescribeRepositories
                  - ecr:ListImages
                  - ecr:DescribeImages
                  - ecr:BatchGetImage
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: EC2DescribeAccess
                Effect: Allow
                Action:
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeRegions
                  - ec2:DescribeVpcs
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeRouteTables
                  - ec2:DescribeDhcpOptions
                  - ec2:DescribeInstances
                  - ec2:DescribeInstanceTypes
                  - ec2:DescribeVolumes
                  - ec2:DescribeVolumesModifications
                  - ec2:DescribeTags
                  - ec2:DescribeNetworkInterfaces
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: EC2NetworkInterfaceActions
                Effect: Allow
                Action:
                  - ec2:AssignPrivateIpAddresses
                  - ec2:AttachNetworkInterface
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                  - ec2:DetachNetworkInterface
                  - ec2:ModifyNetworkInterfaceAttribute
                  - ec2:UnassignPrivateIpAddresses
                  - ec2:CreateNetworkInterfacePermission
                  - ec2:CreateTags
                Resource:
                  - Fn::Sub: arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/*
                  - Fn::Sub: arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:network-interface/*
                  - Fn::Sub: arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:security-group/*
                  - Fn::Sub: arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*
                  - Fn::Sub: arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/${VpcId}
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: EKSClusterAccess
                Effect: Allow
                Action:
                  - eks:DescribeAddon
                  - eks:DescribeAddonVersions
                  - eks:DescribeCluster
                  - eks:DescribeIdentityProviderConfig
                  - eks:DescribeNodegroup
                  - eks:DescribePodIdentityAssociation
                  - eks:DescribeUpdate
                  - eks:ListAddons
                  - eks:ListClusters
                  - eks:ListFargateProfiles
                  - eks:ListIdentityProviderConfigs
                  - eks:ListNodegroups
                  - eks:ListPodIdentityAssociations
                  - eks:ListTagsForResource
                  - eks:ListUpdates
                  - eks:AccessKubernetesApi
                  - eks-auth:AssumeRoleForPodIdentity
                Resource:
                  Fn::Sub: arn:aws:eks:${AWS::Region}:${AWS::AccountId}:cluster/*
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
                    aws:ResourceAccount:
                      Fn::Sub: ${AWS::AccountId}
              - Sid: EKSAccessEntryPolicyAssociation
                Effect: Allow
                Action:
                  - eks:AssociateAccessPolicy
                  - eks:DisassociateAccessPolicy
                Resource: arn:aws:eks:*:*:access-entry/*
                Condition:
                  StringEquals:
                    eks:policyarn: arn:aws:eks::aws:cluster-access-policy/AmazonSagemakerHyperpodInferenceMonitoringPolicy
              - Sid: ELBDescribeAccess
                Effect: Allow
                Action:
                  - elasticloadbalancing:DescribeAccountLimits
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeRules
                  - elasticloadbalancing:DescribeSSLPolicies
                  - elasticloadbalancing:DescribeTags
                  - elasticloadbalancing:DescribeTargetGroupAttributes
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeTargetHealth
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: ELBCreateAccess
                Effect: Allow
                Action:
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:CreateRule
                  - elasticloadbalancing:CreateTargetGroup
                Resource:
                  Fn::Sub: arn:aws:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:*/*
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: SageMakerListAccess
                Effect: Allow
                Action:
                  - sagemaker:ListModels
                  - sagemaker:ListTags
                  - sagemaker:DescribeHubContent
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: SageMakerCreateAccess
                Effect: Allow
                Action:
                  - sagemaker:CreateModel
                  - sagemaker:CreateEndpointConfig
                  - sagemaker:CreateEndpoint
                  - sagemaker:AddTags
                Resource:
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:model/*
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint/*
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint-config/*
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:cluster/*
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:cluster-inference/*
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
                    aws:RequestTag/CreatedBy: HyperPodInference
                    aws:ResourceAccount:
                      Fn::Sub: ${AWS::AccountId}
              - Sid: SageMakerDeleteAccess
                Effect: Allow
                Action:
                  - sagemaker:DeleteModel
                  - sagemaker:DeleteEndpointConfig
                  - sagemaker:DeleteEndpoint
                  - sagemaker:UpdateEndpoint
                Resource:
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:model/*
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint/*
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint-config/*
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:cluster/*
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:cluster-inference/*
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
                    aws:ResourceTag/CreatedBy: HyperPodInference
                    aws:ResourceAccount:
                      Fn::Sub: ${AWS::AccountId}
              - Sid: FSxAccess
                Effect: Allow
                Action:
                  - fsx:DescribeFileSystems
                Resource:
                  Fn::Sub: arn:aws:fsx:${AWS::Region}:${AWS::AccountId}:file-system/*
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: ACMAccess
                Effect: Allow
                Action:
                  - acm:ImportCertificate
                  - acm:DeleteCertificate
                Resource:
                  Fn::Sub: arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/*
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: AllowPassRoleToSageMaker
                Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${ResourceNamePrefix}IORole
                Condition:
                  StringEquals:
                    iam:PassedToService: sagemaker.amazonaws.com
                    aws:ResourceAccount:
                      Fn::Sub: ${AWS::AccountId}
              - Sid: CloudWatchMetricsAccess
                Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                Resource: '*'
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
                    cloudwatch:namespace: HyperPodInference
              - Sid: CloudWatchLogsAccess
                Effect: Allow
                Action:
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:log-stream:*
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
              - Sid: SageMakerAccess
                Effect: Allow
                Action:
                  - sagemaker:DescribeModel
                  - sagemaker:DescribeEndpointConfig
                  - sagemaker:DescribeEndpoint
                  - sagemaker:DescribeCluster
                  - sagemaker:DescribeClusterInference
                  - sagemaker:UpdateClusterInference
                Resource:
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:*/*
                Condition:
                  StringEquals:
                    aws:RequestedRegion:
                      Fn::Sub: ${AWS::Region}
                    aws:ResourceAccount:
                      Fn::Sub: ${AWS::AccountId}
          PolicyName:
            Fn::Sub: ${ResourceNamePrefix}-InfOperator-Policy
      RoleName:
        Fn::Sub: ${ResourceNamePrefix}IORole
    Metadata:
      aws:cdk:path: InfOperatorIamRoleCfnTemplate/ExecutionRole
  KedaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Fn::Sub: >-
          {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":["sagemaker.amazonaws.com"]},"Action":["sts:AssumeRole"]},{"Effect":"Allow","Principal":{"Federated":"arn:aws:iam::${AWS::AccountId}:oidc-provider/${OIDCProviderURLWithoutProtocol}"},"Action":["sts:AssumeRoleWithWebIdentity"],"Condition":{"StringLike":{"${OIDCProviderURLWithoutProtocol}:aud":"sts.amazonaws.com","${OIDCProviderURLWithoutProtocol}:sub":"system:serviceaccount:kube-system:keda-operator"}}}]}
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:GetMetricData
                  - cloudwatch:GetMetricStatistics
                  - cloudwatch:ListMetrics
                Resource: '*'
              - Effect: Allow
                Action:
                  - aps:QueryMetrics
                  - aps:GetLabels
                  - aps:GetSeries
                  - aps:GetMetricMetadata
                Resource: '*'
          PolicyName:
            Fn::Sub: ${ResourceNamePrefix}-keda-policy
      RoleName:
        Fn::Sub: ${ResourceNamePrefix}KedaRole
    Metadata:
      aws:cdk:path: InfOperatorIamRoleCfnTemplate/KedaRole
  GatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Fn::Sub: >-
          {"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"Service":["sagemaker.amazonaws.com"]},"Action":["sts:AssumeRole"]},{"Effect":"Allow","Principal":{"Federated":"arn:aws:iam::${AWS::AccountId}:oidc-provider/${OIDCProviderURLWithoutProtocol}"},"Action":["sts:AssumeRoleWithWebIdentity"],"Condition":{"StringLike":{"${OIDCProviderURLWithoutProtocol}:aud":"sts.amazonaws.com","${OIDCProviderURLWithoutProtocol}:sub":"system:serviceaccount:*:hyperpod-inference-service-account"}}}]}
      Path: /
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CreatePresignedUrlAccess
                Effect: Allow
                Action:
                  - sagemaker:CreateHubContentPresignedUrls
                Resource:
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:aws:hub/SageMakerPublicHub
                  - Fn::Sub: arn:aws:sagemaker:${AWS::Region}:aws:hub-content/SageMakerPublicHub/*/*
          PolicyName:
            Fn::Sub: ${ResourceNamePrefix}-Gated-Policy
      RoleName:
        Fn::Sub: ${ResourceNamePrefix}GateRole
    Metadata:
      aws:cdk:path: InfOperatorIamRoleCfnTemplate/GatedRole
  ClusterRoleAccessEntry:
    Type: AWS::EKS::AccessEntry
    Properties:
      AccessPolicies:
        - AccessScope:
            Type: cluster
          PolicyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy
      ClusterName:
        Ref: EKSClusterName
      PrincipalArn:
        Fn::GetAtt:
          - ExecutionRole
          - Arn
    Metadata:
      aws:cdk:path: InfOperatorIamRoleCfnTemplate/ClusterRoleAccessEntry
  LoadBalancerControllerPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${ResourceNamePrefix}-load-balancer-controller-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iam:CreateServiceLinkedRole
            Resource: '*'
            Condition:
              StringEquals:
                iam:AWSServiceName: elasticloadbalancing.amazonaws.com
          - Effect: Allow
            Action:
              - ec2:DescribeAccountAttributes
              - ec2:DescribeAddresses
              - ec2:DescribeAvailabilityZones
              - ec2:DescribeInternetGateways
              - ec2:DescribeVpcs
              - ec2:DescribeVpcPeeringConnections
              - ec2:DescribeSubnets
              - ec2:DescribeSecurityGroups
              - ec2:DescribeInstances
              - ec2:DescribeNetworkInterfaces
              - ec2:DescribeTags
              - ec2:GetCoipPoolUsage
              - ec2:DescribeCoipPools
              - ec2:GetSecurityGroupsForVpc
              - ec2:DescribeIpamPools
              - ec2:DescribeRouteTables
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeListenerCertificates
              - elasticloadbalancing:DescribeSSLPolicies
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:DescribeTrustStores
              - elasticloadbalancing:DescribeListenerAttributes
              - elasticloadbalancing:DescribeCapacityReservation
            Resource: '*'
          - Effect: Allow
            Action:
              - cognito-idp:DescribeUserPoolClient
              - acm:ListCertificates
              - acm:DescribeCertificate
              - iam:ListServerCertificates
              - iam:GetServerCertificate
              - waf-regional:GetWebACL
              - waf-regional:GetWebACLForResource
              - waf-regional:AssociateWebACL
              - waf-regional:DisassociateWebACL
              - wafv2:GetWebACL
              - wafv2:GetWebACLForResource
              - wafv2:AssociateWebACL
              - wafv2:DisassociateWebACL
              - shield:GetSubscriptionState
              - shield:DescribeProtection
              - shield:CreateProtection
              - shield:DeleteProtection
            Resource: '*'
          - Effect: Allow
            Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RevokeSecurityGroupIngress
            Resource: '*'
          - Effect: Allow
            Action:
              - ec2:CreateSecurityGroup
            Resource: '*'
          - Effect: Allow
            Action:
              - ec2:CreateTags
            Resource: arn:aws:ec2:*:*:security-group/*
            Condition:
              StringEquals:
                ec2:CreateAction: CreateSecurityGroup
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
          - Effect: Allow
            Action:
              - ec2:CreateTags
              - ec2:DeleteTags
            Resource: arn:aws:ec2:*:*:security-group/*
            Condition:
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'true'
                aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
          - Effect: Allow
            Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:RevokeSecurityGroupIngress
              - ec2:DeleteSecurityGroup
            Resource: '*'
            Condition:
              'Null':
                aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
          - Effect: Allow
            Action:
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateTargetGroup
            Resource: '*'
            Condition:
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
          - Effect: Allow
            Action:
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:DeleteRule
            Resource: '*'
          - Effect: Allow
            Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
            Resource:
              - arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*
            Condition:
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'true'
                aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
          - Effect: Allow
            Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:RemoveTags
            Resource:
              - arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*
              - arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*
          - Effect: Allow
            Action:
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:SetIpAddressType
              - elasticloadbalancing:SetSecurityGroups
              - elasticloadbalancing:SetSubnets
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:ModifyTargetGroup
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:ModifyListenerAttributes
              - elasticloadbalancing:ModifyCapacityReservation
              - elasticloadbalancing:ModifyIpPools
            Resource: '*'
            Condition:
              'Null':
                aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
          - Effect: Allow
            Action:
              - elasticloadbalancing:AddTags
            Resource:
              - arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*
              - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*
            Condition:
              StringEquals:
                elasticloadbalancing:CreateAction:
                  - CreateTargetGroup
                  - CreateLoadBalancer
              'Null':
                aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
          - Effect: Allow
            Action:
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:DeregisterTargets
            Resource: arn:aws:elasticloadbalancing:*:*:targetgroup/*/*
          - Effect: Allow
            Action:
              - elasticloadbalancing:SetWebAcl
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:AddListenerCertificates
              - elasticloadbalancing:RemoveListenerCertificates
              - elasticloadbalancing:ModifyRule
              - elasticloadbalancing:SetRulePriorities
            Resource: '*'
    Metadata:
      aws:cdk:path: InfOperatorIamRoleCfnTemplate/LoadBalancerControllerPolicy
  S3MountpointPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName:
        Fn::Sub: ${ResourceNamePrefix}-s3-mountpoint-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: MountpointFullBucketAccess
            Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - arn:aws:s3:::*
              - arn:aws:s3:::*/*
          - Sid: MountpointObjectReadAccess
            Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - arn:aws:s3:::*
              - arn:aws:s3:::*/*
    Metadata:
      aws:cdk:path: InfOperatorIamRoleCfnTemplate/S3MountpointPolicy
Outputs:
  InfOperatorIAMRoleName:
    Description: Inference Operator IAM role Name
    Value:
      Ref: ExecutionRole
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-InfOperatorIAMRoleName
  InfOperatorIAMRoleArn:
    Description: Inference Operator IAM role Arn
    Value:
      Fn::GetAtt:
        - ExecutionRole
        - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-InfOperatorIAMRoleArn
  KedaRoleArn:
    Description: KEDA IAM role ARN
    Value:
      Fn::GetAtt:
        - KedaRole
        - Arn
  KedaRoleName:
    Description: KEDA IAM role Name
    Value:
      Ref: KedaRole
  ClusterRoleAccessEntryArn:
    Description: Cluster Role Access Entry ARN
    Value:
      Fn::GetAtt:
        - ClusterRoleAccessEntry
        - AccessEntryArn
  GatedRoleArn:
    Description: Gated IAM role ARN
    Value:
      Fn::GetAtt:
        - GatedRole
        - Arn
  GatedRoleName:
    Description: Gated IAM role Name
    Value:
      Ref: GatedRole
  LoadBalancerControllerPolicyArn:
    Description: Load Balancer Controller Policy ARN
    Value:
      Ref: LoadBalancerControllerPolicy
  S3MountpointPolicyArn:
    Description: S3 Mountpoint Policy ARN
    Value:
      Ref: S3MountpointPolicy
